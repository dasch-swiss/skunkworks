# flags used for debugging
build --toolchain_resolution_debug
build --explain True
build --verbose_explanations
build --verbose_failures
# build --experimental_enable_docker_sandbox
# build --experimental_docker_verbose

# build stamping, i.e., get things from bazel-out/volatile-status.txt into the build
build --workspace_status_command=tools/buildstamp/get_workspace_status --stamp=yes
build --compilation_mode dbg

# force using platforms for toolchain resolution (will become default at some point)
build --incompatible_enable_cc_toolchain_resolution

# add some compiler settings
build --repo_env=CC=clang --cxxopt='-std=c++17' --cxxopt='-DSHTTPS_ENABLE_SSL'

# Use our custom-configured c++ toolchain.
build:clang_config --crosstool_top=//toolchain:clang_suite

# Use --cpu as a differentiator.
build:clang_config --cpu=k8

# Use the default Bazel C++ toolchain to build the tools used during the build.
build:clang_config --host_crosstool_top=@bazel_tools//tools/cpp:toolchain
